# Generated by Django 4.1.1 on 2022-09-16 04:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="App",
            fields=[
                ("app_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=256, null=True)),
                ("slug", models.CharField(db_index=True, max_length=256, null=True)),
                ("installation_count", models.IntegerField(null=True)),
                ("owner_id", models.IntegerField()),
                (
                    "owner_type",
                    models.CharField(
                        choices=[("user", "User"), ("org", "Organization")],
                        default="org",
                        max_length=4,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="GithubUser",
            fields=[
                ("user_id", models.IntegerField(primary_key=True, serialize=False)),
                ("login", models.CharField(max_length=256)),
                ("name", models.CharField(default="", max_length=256)),
                ("bio", models.CharField(max_length=8192, null=True)),
                ("company", models.CharField(max_length=128, null=True)),
                ("account_created", models.DateTimeField()),
                ("account_updated", models.DateTimeField()),
                ("disk_usage", models.IntegerField(null=True)),
                ("email", models.EmailField(max_length=254, null=True)),
                ("plan", models.CharField(max_length=32, null=True)),
                ("role", models.CharField(max_length=64, null=True)),
                ("site_admin", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Installation",
            fields=[
                (
                    "installation_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("target_id", models.IntegerField()),
                (
                    "target_type",
                    models.CharField(
                        choices=[("org", "Organization"), ("repo", "Repository")],
                        default="org",
                        max_length=4,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="watchtower_service.app",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "organization_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("organization_login", models.CharField(db_index=True, max_length=256)),
                ("organization_name", models.CharField(max_length=256, null=True)),
                ("organization_type", models.CharField(max_length=32, null=True)),
                ("description", models.CharField(max_length=2048, null=True)),
                ("email", models.EmailField(max_length=254, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("company", models.CharField(max_length=128, null=True)),
                ("avatar_url", models.URLField(null=True)),
                (
                    "default_repository_permission",
                    models.CharField(max_length=32, null=True),
                ),
                ("disk_usage", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_json", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("team_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=256)),
                ("description", models.CharField(max_length=2048, null=True)),
                ("slug", models.CharField(default="", max_length=512)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="teams", to="watchtower_service.githubuser"
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="watchtower_service.organization",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="watchtower_service.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "repository_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=512)),
                ("archived", models.BooleanField(default=False)),
                ("description", models.CharField(max_length=1024, null=True)),
                ("is_fork", models.BooleanField(default=False)),
                ("has_downloads", models.BooleanField(default=False)),
                ("has_issues", models.BooleanField(default=False)),
                ("has_pages", models.BooleanField(default=False)),
                ("has_projects", models.BooleanField(default=False)),
                ("has_wiki", models.BooleanField(default=False)),
                ("language", models.CharField(max_length=128, null=True)),
                (
                    "master_branch",
                    models.CharField(default="main", max_length=512, null=True),
                ),
                ("is_private", models.BooleanField(default=False)),
                ("last_pushed_at", models.DateTimeField(null=True)),
                ("size", models.IntegerField(null=True)),
                ("subscribers_count", models.IntegerField(default=0, null=True)),
                ("last_updated", models.DateTimeField(null=True)),
                ("owner_id", models.IntegerField(null=True)),
                (
                    "owner_type",
                    models.CharField(
                        choices=[("org", "Organization"), ("user", "User")],
                        default="org",
                        max_length=4,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "installation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repositories",
                        to="watchtower_service.installation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrganizationMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_organization_admin", models.BooleanField(default=False)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="watchtower_service.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="watchtower_service.githubuser",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="githubuser",
            name="organizations",
            field=models.ManyToManyField(
                related_name="members",
                through="watchtower_service.OrganizationMember",
                to="watchtower_service.organization",
            ),
        ),
    ]
